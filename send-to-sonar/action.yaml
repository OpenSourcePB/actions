name: send-to-sonar
author: "Bekir Bekirov"
description: "Send to Sonar"
inputs:
  app-folder:
    description: "Application folder"
    required: false
    default: "."
  sonar-organization:
    description: "Sonar origanization"
    required: true
  sonar-login:
    description: "Sonar login"
    required: true
runs:
  using: composite
  steps:
    - id: define-project-key
      name: Define project key
      shell: bash
      run: |
        PROJECT_KEY=${{ github.repository_owner }}_${{ github.event.repository.name }}
        if [[ ${{ inputs.app-folder }} != "." ]]
        then
          PROJECT_KEY="${PROJECT_KEY}_${{ inputs.app-folder }}"
        fi
        echo "Project key defined as: $PROJECT_KEY"
        echo "::set-output name=project-key::$(echo $PROJECT_KEY)"
    - name: Install Sonarqube scanner
      shell: bash
      run: |
        if [ -d "../sonar-scanner-4.6.2.2472-linux" ]
        then
          rm -rf ../sonar-scanner-4.6.2.2472-linux
        fi
        curl https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip \
           --output sonar-scanner-cli-4.6.2.2472-linux.zip \
           --silent
        unzip -q sonar-scanner-cli-4.6.2.2472-linux.zip
        mv sonar-scanner-4.6.2.2472-linux ..
        rm sonar-scanner-cli-4.6.2.2472-linux.zip
    - name: Run Sonarqube scanner
      shell: bash
      run: |
        ../sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=${{ inputs.sonar-organization }} \
          -Dsonar.login=${{ inputs.sonar-login }} \
          -Dsonar.projectBaseDir=${{ inputs.app-folder }} \
          -Dsonar.projectKey=${{ steps.define-project-key.outputs.project-key }}
        ls -al
    - name: Clean
      shell: bash
      run: |
        rm -rf ../sonar-scanner-4.6.2.2472-linux

name: semgrep
author: "Bekir Bekirov"
description: "Scan and Send Java project with Semgrep tool"
inputs:
  send-results:
    description: "Send scan results"
    required: false
    default: "false"
  url:
    description: Scan results collector URL
    required: false
  user:
    description: Collector username
    required: false
  password:
    description: Collector password
    required: false
  token:
    description: Token for rules
    required: true
  ruleset:
    description: Rule set to be used
    required: false
    default: "java-top-10"
runs:
  using: composite
  steps:
    - name: Checkout rules
      uses: actions/checkout@v2
      with:
        repository: "PB-Digital/infra-helm-chart"
        ref: refs/heads/master
        token: ${{ inputs.token }}
        path: infra-helm-chart
    - id: define-ruleset-file
      name: Define ruleset file
      shell: bash
      run: |
        RULESET_PATH="unknown"
        case ${{ inputs.ruleset }} in
          java-top-10)
              RULESET_PATH="infra-helm-chart/semgrep/owasp-top-10-java.yaml"
              ;;
          javascript)
              RULESET_PATH="infra-helm-chart/semgrep/javascript.yaml"
              ;;
          nodejs)
              RULESET_PATH="infra-helm-chart/semgrep/nodejs-scan.yaml"
              ;;
          typescript)
              RULESET_PATH="infra-helm-chart/semgrep/typescript.yaml"
              ;;
        esac
        if [[ $RULESET_PATH == "unknown" ]]
        then
          echo "File path for ruleset ${{ inputs.ruleset }} is not defined"
          exit 1
        fi
        if [ ! -f $RULESET_PATH ]
        then
          echo "File $RULESET_PATH not found"
          exit 1
        fi
        echo "::set-output name=ruleset-path::$(echo $RULESET_PATH)"
        echo $RULESET_PATH
    - name: Test, show or send
      shell: bash
      run: |
        if [[ ${{ inputs.send-results }} == true ]]
        then
          semgrep --config ${{ steps.define-ruleset-file.outputs.ruleset-path }} --output results.json --json
          curl --fail -u ${{ inputs.user }}:${{ inputs.password }} \
              -F "repo-name=${{ github.repository }}"  \
              -F "repo-url=${{ github.repositoryUrl }}" \
              -F "scan-type=Semgrep JSON Report" \
              -F "repo-branch=${{ github.ref_name }}" \
              -F "file=@results.json" \
              ${{ inputs.url }}
        else
          semgrep --config ${{ steps.define-ruleset-file.outputs.ruleset-path }} --error
        fi
